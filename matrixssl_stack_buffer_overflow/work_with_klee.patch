diff --git a/configs/default/cryptoConfig.h b/configs/default/cryptoConfig.h
index 0e0944c..d3c4bda 100644
--- a/configs/default/cryptoConfig.h
+++ b/configs/default/cryptoConfig.h
@@ -94,7 +94,7 @@
 #  define USE_X25519
 /**< @note Enable Pure EdDSA Curve25519 (Ed25519) signatures.
    @pre USE_ECC, USE_SHA512. */
-#  define USE_ED25519
+#  undef USE_ED25519
 
 /******************************************************************************/
 /**
@@ -142,7 +142,7 @@
     TLS clients and servers. These cipher suites are not allowed in FIPS
     mode of operation.
 */
-#  define USE_CHACHA20_POLY1305_IETF
+#  undef USE_CHACHA20_POLY1305_IETF
 
 /** @security 3DES is still relatively secure, however is deprecated for TLS */
 #  define USE_3DES
@@ -295,6 +295,8 @@
 #  define USE_PKCS1_OAEP/* OAEP padding algorithm */
 #  define USE_PKCS1_PSS/* PSS padding algorithm */
 
+#define PS_NO_ASM
+
 #endif    /* _h_PS_CRYPTOCONFIG */
 
 /******************************************************************************/
diff --git a/configs/default/matrixsslConfig.h b/configs/default/matrixsslConfig.h
index 6c7cea3..8a353cd 100644
--- a/configs/default/matrixsslConfig.h
+++ b/configs/default/matrixsslConfig.h
@@ -78,7 +78,7 @@ extern "C" {
 /** TLS 1.3 ciphers */
 #  define USE_TLS_AES_128_GCM_SHA256
 #  define USE_TLS_AES_256_GCM_SHA384
-#  define USE_TLS_CHACHA20_POLY1305_SHA256
+#  undef USE_TLS_CHACHA20_POLY1305_SHA256
 
 /** Ephemeral ECC DH keys, ECC DSA certificates */
 #   define USE_TLS_ECDHE_ECDSA_WITH_AES_128_CBC_SHA/**< @security NIST_SHOULD */
diff --git a/core/config/coreConfig.h b/core/config/coreConfig.h
index a0e9380..edd7dfe 100644
--- a/core/config/coreConfig.h
+++ b/core/config/coreConfig.h
@@ -123,7 +123,7 @@
     always be set.
 */
 #  ifndef NO_MULTITHREADING
-#   define USE_MULTITHREADING
+/* #define USE_MULTITHREADING */
 #  endif /* NO_MULTITHREADING */
 
 /**
diff --git a/core/makefiles/detect-and-rules.mk b/core/makefiles/detect-and-rules.mk
index 158d0e9..da5a5b1 100644
--- a/core/makefiles/detect-and-rules.mk
+++ b/core/makefiles/detect-and-rules.mk
@@ -185,7 +185,7 @@ ifneq (,$(findstring x86_64-,$(CCARCH)))
  STROPTS+=", 64-bit Intel RSA/ECC ASM"
  # Provide flags for AES-NI if the host supports it (assumes Host is Target)
  ifneq (,$(findstring -linux,$(CCARCH)))
-  ifeq ($(shell grep -o -m1 aes /proc/cpuinfo),aes)
+  ifneq ($(shell grep -o -m1 aes /proc/cpuinfo),aes)
    CFLAGS_ENABLE_AESNI=-maes -mpclmul -msse4.1
    CFLAGS_ENABLE_AES=-maes
    CFLAGS+=$(CFLAGS_ENABLE_AES)
diff --git a/crypto/test/algorithmTest.c b/crypto/test/algorithmTest.c
index 1b092ea..4813b0d 100644
--- a/crypto/test/algorithmTest.c
+++ b/crypto/test/algorithmTest.c
@@ -2203,7 +2203,7 @@ L_CBC_TIMING:
 #  define TEST_KEY_LEN 32
 #  define TEST_IV_LEN 12
 # endif
-
+#warning "USE_CHACHA20_POLY1305_IETF"
 int32 psChacha20Poly1305IetfTest(void)
 {
     int32 i;
